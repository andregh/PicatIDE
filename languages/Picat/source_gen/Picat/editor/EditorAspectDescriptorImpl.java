package Picat.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {


  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AndConstraint_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CommentBlock_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new CommentLine_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ConjunctiveGoal_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new DisjunctiveGoal_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new EmptyLine_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new EquivConstraint_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new FunctionDef_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new FunctionDirective_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new FunctionFact_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new FunctionRule_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new Head_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ImplConstraint_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new ImportDecl_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new ImportItem_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new ModuleDecl_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new NegativeGoal_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new Operator_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new OrConstraint_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new Root_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new Term_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new VariableAnonymous_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new XorConstraint_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        if ("Picat.editor.Eor".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new Eor());
        }
        break;
      case 1:
        if ("Picat.editor.TermEditor".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new TermEditor());
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }



  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"Picat.structure.AndConstraint", "Picat.structure.CommentBlock", "Picat.structure.CommentLine", "Picat.structure.ConjunctiveGoal", "Picat.structure.DisjunctiveGoal", "Picat.structure.EmptyLine", "Picat.structure.EquivConstraint", "Picat.structure.FunctionDef", "Picat.structure.FunctionDirective", "Picat.structure.FunctionFact", "Picat.structure.FunctionRule", "Picat.structure.Head", "Picat.structure.ImplConstraint", "Picat.structure.ImportDecl", "Picat.structure.ImportItem", "Picat.structure.ModuleDecl", "Picat.structure.NegativeGoal", "Picat.structure.Operator", "Picat.structure.OrConstraint", "Picat.structure.Root", "Picat.structure.Term", "Picat.structure.VariableAnonymous", "Picat.structure.XorConstraint"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"Picat.structure.PicatConcept", "Picat.structure.Term"};
}
