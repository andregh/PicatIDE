package Picat.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class VariableNamed_Constraints extends BaseConstraintsDescriptor {
  public VariableNamed_Constraints() {
    super("Picat.structure.VariableNamed");
  }

  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("val", new BasePropertyConstraintsDescriptor("val", this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }

      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "val";
        return (SPropertyOperations.getString(propertyValue)).matches("_[A-Z|a-z|0-9]*") || (SPropertyOperations.getString(propertyValue)).matches("[A-Z][A-Z|a-z|0-9]*");
      }
    });
    return properties;
  }
}
